version: '3.3'
services:
  db:
    image: postgres:13.0-alpine

    container_name: foodgram-db

    restart: always

    volumes:
      - /var/lib/postgresql/data/

    env_file:
      - ./.env

  backend:
    build:
      context: ../foodgram/
      dockerfile: Dockerfile

    container_name: foodgram-web

    restart: always

    command: >
      bash -c "python manage.py migrate && 
               python manage.py collectstatic --no-input &&
               python manage.py load_ingredients &&
               python manage.py load_tags &&
               gunicorn foodgram.wsgi:application --bind 0:8000"

    volumes:
      - static_value:/app/static/
      - media_value:/app/media/

    depends_on:
      - db

    env_file:
      - ./.env

  frontend:
    build:
      context: ../frontend/
      dockerfile: Dockerfile

    volumes:
      - ../frontend/:/app/result_build/

    depends_on:
      - db

  nginx:
    image: nginx:1.19.3

    container_name: foodgram-nginx

    restart: always

    ports:
      - "5000:5000"

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/

    depends_on:
      - backend

volumes:
  static_value:
  media_value:
