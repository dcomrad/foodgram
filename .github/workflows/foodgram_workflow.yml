name: foodgram

on: push

jobs:
  tests:
    name: Install dependencies and run pep8 tests
    runs-on: ubuntu-latest

    steps:
    -
      name: Check out the repo
      uses: actions/checkout@v2
    -
      name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    -
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt
    -
      name: Flake8 test
      run: |
        python -m flake8

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests

      steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Push backend application to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: dcomrad/foodgram_backend:latest

  deploy:
      name: Deploy to the remote server
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub

      steps:
      -
        name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            sudo docker pull dcomrad/foodgram_backend
            sudo docker container stop foodgram_backend
            sudo docker container rm foodgram_backend
            cd ~/infra
            rm .env && touch .env
            echo 'SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}' >> .env
            echo 'DEBUG_MODE=${{ secrets.DJANGO_DEBUG_MODE }}' >> .env
            echo 'DB_ENGINE=${{ secrets.DB_ENGINE }}' >> .env
            echo 'DB_NAME=${{ secrets.DB_NAME }}' >> .env
            echo 'DB_USER=${{ secrets.DB_USER }}' >> .env
            echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env
            echo 'DB_HOST=${{ secrets.DB_HOST }}' >> .env
            echo 'DB_PORT=${{ secrets.DB_PORT }}' >> .env
            sudo docker compose up -d
            sudo docker image prune -f

  send_message:
    name: Sending a message about successful workflow
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    -
      name: Send successful workflow passing message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
